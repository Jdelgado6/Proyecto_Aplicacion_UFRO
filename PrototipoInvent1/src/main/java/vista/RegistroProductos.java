package Vista;

import Conexion.Conexion;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jd_6
 */
public class RegistroProductos extends javax.swing.JFrame {

    private String nombre;
    private String desripcion;
    private int cantidad;

    public RegistroProductos() {
        initComponents();
        this.setLocationRelativeTo(null);
        mostrarTabla("");
        TxtCantidadProductos.setEditable(false);
        TxtIDProducto.setEnabled(false);
        limpiar();
        cerrar();
        cargarComboCategoria(CmbCategoria);

        TxtFecha.setText(fechaActual());

        for (int i = 0; i <= TablaProductos.getRowCount(); i++) {

            TxtCantidadProductos.setText(" " + i);

        }

    }

    void limpiar() {
        TxtIDProducto.setText("");
        TxtNombreProducto.setText("");
        TxtDescripcion.setText("");
        TxtCantidad.setText("");
        CmbCategoria.setSelectedIndex(0);

    }

    void mostrarTabla(String valor) {

        DefaultTableModel modelo = new DefaultTableModel();

        modelo.addColumn("id");
        modelo.addColumn("Nombre");
        modelo.addColumn("Descripción");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Categoria");
        modelo.addColumn("Fecha");

        TablaProductos.setModel(modelo);

        String sql = "SELECT * FROM producto WHERE CONCAT (nombre,' ',descripcion, ' ', cantidad, ' ',id_categoria_producto, ' ',id_registro_producto) LIKE'%" + valor + "%'";

        String datos[] = new String[6];

        Statement st;

        try {

            st = cn.createStatement();

            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                datos[5] = rs.getString(6);

                modelo.addRow(datos);
            }

            TablaProductos.setModel(modelo);

        } catch (SQLException e) {
            System.err.println(e);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        TxtNombreProducto = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        TxtDescripcion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TxtCantidad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        CmbCategoria = new javax.swing.JComboBox<>();
        BtnAgregar = new javax.swing.JButton();
        BtnVolver = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        BtnActualizar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        TxtBuscar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TxtCantidadProductos = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        TxtIDProducto = new javax.swing.JTextField();
        BtnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaProductos = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        TxtFecha = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre:");

        TxtNombreProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtNombreProductoActionPerformed(evt);
            }
        });

        jLabel2.setText("Descripción:");

        jLabel3.setText("cantidad:");

        TxtCantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtCantidadKeyTyped(evt);
            }
        });

        jLabel4.setText("Categoria:");

        CmbCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione categoria" }));

        BtnAgregar.setText("Agregar");
        BtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAgregarActionPerformed(evt);
            }
        });

        BtnVolver.setText("Volver");
        BtnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVolverActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Registro producto");

        BtnActualizar.setText("Actualizar");
        BtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnActualizarActionPerformed(evt);
            }
        });

        jLabel6.setText("Buscar:");

        TxtBuscar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TxtBuscarMouseClicked(evt);
            }
        });
        TxtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TxtBuscarKeyTyped(evt);
            }
        });

        jLabel7.setText("Cantidad prodcutos:");

        jLabel8.setText("ID Prodcuto:");

        TxtIDProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtIDProductoActionPerformed(evt);
            }
        });

        BtnEliminar.setText("Eliminar");
        BtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarActionPerformed(evt);
            }
        });

        TablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TablaProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaProductosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaProductos);

        jLabel11.setText("Fecha:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addComponent(TxtNombreProducto)
                        .addComponent(TxtDescripcion)
                        .addComponent(TxtIDProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3)
                        .addComponent(jLabel8)
                        .addComponent(TxtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(BtnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BtnVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(TxtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(TxtFecha))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TxtCantidadProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(394, 394, 394))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TxtIDProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TxtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TxtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TxtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(CmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BtnAgregar)
                            .addComponent(BtnActualizar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(TxtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(TxtCantidadProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(BtnEliminar))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnVolver)
                    .addComponent(jLabel11)
                    .addComponent(TxtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Productos", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TablaProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaProductosMouseClicked

        int fila = this.TablaProductos.getSelectedRow();

        this.TxtIDProducto.setText(this.TablaProductos.getValueAt(fila, 0).toString());
        this.TxtNombreProducto.setText(this.TablaProductos.getValueAt(fila, 1).toString());
        this.TxtDescripcion.setText(this.TablaProductos.getValueAt(fila, 2).toString());
        this.TxtCantidad.setText(this.TablaProductos.getValueAt(fila, 3).toString());
        this.CmbCategoria.setSelectedItem(this.TablaProductos.getValueAt(fila, 4).toString());
    }//GEN-LAST:event_TablaProductosMouseClicked

    private void BtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarActionPerformed
        try {
            PreparedStatement ps = cn.prepareStatement("DELETE FROM producto WHERE id='" + TxtIDProducto.getText() + "'");

            int respuesta = ps.executeUpdate();

            if (respuesta > 0) {
                JOptionPane.showMessageDialog(null, "Producto elimiamdo");
                limpiar();
                mostrarTabla("");

                for (int i = 0; i <= TablaProductos.getRowCount(); i++) {

                    TxtCantidadProductos.setText(" " + i);

                }

            } else {
                JOptionPane.showMessageDialog(null, "No ha seleccionado fila");
            }
        } catch (SQLException e) {

            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al eliminar producto...contacte al administrador");
        }
    }//GEN-LAST:event_BtnEliminarActionPerformed

    private void TxtIDProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtIDProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtIDProductoActionPerformed

    private void TxtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtBuscarKeyTyped
        mostrarTabla(TxtBuscar.getText());

        for (int i = 0; i <= TablaProductos.getRowCount(); i++) {

            TxtCantidadProductos.setText(" " + i);

        }
    }//GEN-LAST:event_TxtBuscarKeyTyped

    private void TxtBuscarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TxtBuscarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtBuscarMouseClicked

    private void BtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnActualizarActionPerformed

        String producto = (String) CmbCategoria.getSelectedItem();

        try {
            if (TxtNombreProducto.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo nombre no puede quedar vacio");

            } else if (TxtDescripcion.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null, " Campo Descripción no puede quedar vacio");

            } else if (TxtCantidad.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Campo cantidad no puede quedar vacio");

            } else if (producto.equals("Seleccione categoria")) {

                JOptionPane.showMessageDialog(null, "Debes seleccionar una categoria");
            } else {
                PreparedStatement ps = cn.prepareStatement("UPDATE producto SET nombre='" + TxtNombreProducto.getText() + "', descripcion='" + TxtDescripcion.getText() + "',cantidad='" + TxtCantidad.getText() + "',id_categoria_producto='" + CmbCategoria.getSelectedItem().toString() + "' WHERE id='" + TxtIDProducto.getText() + "'");

                int respuesta = ps.executeUpdate();

                if (respuesta > 0) {
                    JOptionPane.showMessageDialog(null, "Datos del producto actualizados correctamente ");
                    limpiar();
                    mostrarTabla("");
                } else {
                    JOptionPane.showMessageDialog(null, "No se ha seleccionado fila");
                }

            }

        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al actualizar los datos... contacte al administrador");

        }
    }//GEN-LAST:event_BtnActualizarActionPerformed

    private void BtnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVolverActionPerformed
        Principal principal = new Principal();
        principal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BtnVolverActionPerformed

    private void BtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAgregarActionPerformed
        String id_categoria_producto = CmbCategoria.getSelectedItem().toString();
        String categoria = (String) CmbCategoria.getSelectedItem();

        try {

            if (TxtNombreProducto.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Campo nombre no puede quedar vacio");

            } else if (TxtDescripcion.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null, " Campo descripcion no puede quedar vacio");
            } else if (TxtCantidad.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Campo Cantidad no puede quedar vacio");

            } else if (TxtFecha.getText().isEmpty()) {

                JOptionPane.showMessageDialog(null, "Campo fecja no puede quedar vacio");

            } else if (categoria.equals("Seleccione categoria")) {

                JOptionPane.showMessageDialog(null, "Debes seleccionar una materia");
            } else {

                PreparedStatement ps = cn.prepareStatement("INSERT INTO producto (nombre,descripcion,cantidad,id_categoria_producto,id_registro_producto) VALUES (?,?,?,?,?)");
                ps.setString(1, TxtNombreProducto.getText());
                ps.setString(2, TxtDescripcion.getText());
                ps.setString(3, TxtCantidad.getText());
                ps.setString(4, id_categoria_producto);
                ps.setString(5, TxtFecha.getText());

                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, "producto registrado correctamente");
                mostrarTabla("");
                limpiar();

                for (int i = 0; i <= TablaProductos.getRowCount(); i++) {

                    TxtCantidadProductos.setText(" " + i);

                }
            }

        } catch (SQLException e) {
            System.err.println(e);

            JOptionPane.showMessageDialog(null, "Error al guardar producto");

        }
    }//GEN-LAST:event_BtnAgregarActionPerformed

    private void TxtCantidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtCantidadKeyTyped
        char c = evt.getKeyChar();

        if (c < '0' || c > '9')
        evt.consume();
    }//GEN-LAST:event_TxtCantidadKeyTyped

    private void TxtNombreProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtNombreProductoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtNombreProductoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroProductos().setVisible(true);
            }
        });
    }

    public void cerrar() {

        try {

            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);

            addWindowListener(new WindowAdapter() {

                public void windowClosing(WindowEvent e) {

                    confirmarSalida();
                }
            });

        } catch (Exception e) {
        }
    }

    public void confirmarSalida() {

        int valor = JOptionPane.showConfirmDialog(this, "¿Desea cerrar la aplicación ?", "Advertencia", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        if (valor == JOptionPane.YES_OPTION) {
            JOptionPane.showMessageDialog(null, "Hasta pronto", "", JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
        }
    }

    public void cargarComboCategoria(JComboBox combocategoria) {

        try {

            String sql = "SELECT nombre FROM Categoria";

            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                combocategoria.addItem(rs.getString("nombre"));

            }

        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null, "Error al cargar datos en combobox");
        }
    }

    public static String fechaActual() {

        Date fecha = new Date();
        SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/YY");

        return formatoFecha.format(fecha);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnActualizar;
    private javax.swing.JButton BtnAgregar;
    private javax.swing.JButton BtnEliminar;
    private javax.swing.JButton BtnVolver;
    private javax.swing.JComboBox<String> CmbCategoria;
    private javax.swing.JTable TablaProductos;
    private javax.swing.JTextField TxtBuscar;
    private javax.swing.JTextField TxtCantidad;
    private javax.swing.JTextField TxtCantidadProductos;
    private javax.swing.JTextField TxtDescripcion;
    private javax.swing.JTextField TxtFecha;
    private javax.swing.JTextField TxtIDProducto;
    private javax.swing.JTextField TxtNombreProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    Conexion con = new Conexion();
    Connection cn = con.getConnection();
}
